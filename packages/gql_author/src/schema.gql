 
# 系统
type System{
  _id:ID!
  name:String!
  description:String!
  # 系统下面的角色
  roles:[Role]
  # 系统拥有的权限
  permissions:[Permission]
}

# 权限
type Permission {
  _id:ID!
  name:String!
  description:String!
  #权限属于哪个系统
  system:System
}

# 角色
type Role {
	_id: ID!
  name:String!
  description:String!
  system:System!
  users:[User]
  permissions:[ Permission!]
 
}

# 用户
type User{
  _id: ID!
  # 工号
  code:String!
  # 姓名
  name: String!
  # 邮箱
  email:String!
  # 密码
  password: String!
  # 用户角色 可以为空
  roles:[Role]
}


# 查询用户输入参数 格式：XxxParams
# input UserParams{
#   code:Int
#   email:String
# }
input LoginParams{
  email:String!
  password:String!
}

# 查询
type Query{
  login(params:LoginParams):User
  # 系统列表
  getSystemList:[System]
  # 根据ID查询系统详情
  getSystemByID(_id:ID!):System
  # 根据用户ID查用户详情
  getUserByID(_id:String!):User
  # 根据工号或邮箱查询指定用户信息
  getUserList:[User]
  # 根据系统ID查询角色列表
  # 角色信息
  getRoleByID(_id:String!):Role
}


# 编辑用户输入参数 格式：XxxFormData
input UserFormData{
  _id:ID
  # 工号
  code:String!
  # 姓名
  name: String!
  # 邮箱
  email:String!
  # 密码
  password: String!
  # 确认密码
  checkPassword:String!
}

# 编辑角色信息参数
input RoleFormData{
  _id: ID
  name:String!
  description:String!
  system:ID!
  permissions:[ String!]
}

# 编辑系统信息参数
input SystemFormData{
  _id:ID
  name:String!
  description:String!
}
# 编辑系统权限信息
input SystemPermissionFormData{
  systemID:ID!
  permission:ID!
  name:String!
  description:String!
}

# 给角色添加用户
input AddFormData{
  _id: ID!
  userId:ID!
}

type addUserResult{
  _id: ID!
  name:String!
  description:String!
  user:User!
}

# 编辑
type Mutation{
  # 创建或者编辑权限信息
  createdOrUpdateSystemPermisson(data:SystemPermissionFormData):Permission
  # 创建或编辑系统信息
  createdOrUpdateSystem(data:SystemFormData):System
  # 创建或者编辑用户信息[注册逻辑]
  createOrUpdateUser(data:UserFormData):User
  # 创建或编辑角色信息
  createOrUpdateRole(data:RoleFormData):Role
  # 给角色添加用户
  addUserToRole(data:AddFormData):addUserResult
}